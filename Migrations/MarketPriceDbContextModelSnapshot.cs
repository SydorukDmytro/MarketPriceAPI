// <auto-generated />
using System;
using MarketPriceAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketPriceAPI.Migrations
{
    [DbContext(typeof(MarketPriceDbContext))]
    partial class MarketPriceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("MarketPriceAPI.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BaseCurrency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<double>("TickSize")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("MarketPriceAPI.Models.RealTimePriceSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Ask")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Bid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Last")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("instrumentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("instrumentId");

                    b.ToTable("RealTimePriceSnapshots");
                });

            modelBuilder.Entity("MarketPriceAPI.Models.Asset", b =>
                {
                    b.OwnsOne("MarketPriceAPI.Models.Mappings", "Mappings", b1 =>
                        {
                            b1.Property<Guid>("AssetId")
                                .HasColumnType("TEXT");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");

                            b1.OwnsOne("MarketPriceAPI.Models.MappingDetails", "Oanda", b2 =>
                                {
                                    b2.Property<Guid>("MappingsAssetId")
                                        .HasColumnType("TEXT");

                                    b2.Property<int?>("DefaultOrderSize")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Exchange")
                                        .HasColumnType("TEXT");

                                    b2.Property<bool>("IsPresent")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int?>("MaxOrderSize")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Symbol")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("MappingsAssetId");

                                    b2.ToTable("Assets");

                                    b2.WithOwner()
                                        .HasForeignKey("MappingsAssetId");

                                    b2.OwnsOne("MarketPriceAPI.Models.TradingHours", "TradingHours", b3 =>
                                        {
                                            b3.Property<Guid>("MappingDetailsMappingsAssetId")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("ElectronicEnd")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("ElectronicStart")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("RegularEnd")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("RegularStart")
                                                .HasColumnType("TEXT");

                                            b3.HasKey("MappingDetailsMappingsAssetId");

                                            b3.ToTable("Assets");

                                            b3.WithOwner()
                                                .HasForeignKey("MappingDetailsMappingsAssetId");
                                        });

                                    b2.Navigation("TradingHours")
                                        .IsRequired();
                                });

                            b1.OwnsOne("MarketPriceAPI.Models.MappingDetails", "Simulation", b2 =>
                                {
                                    b2.Property<Guid>("MappingsAssetId")
                                        .HasColumnType("TEXT");

                                    b2.Property<int?>("DefaultOrderSize")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Exchange")
                                        .HasColumnType("TEXT");

                                    b2.Property<bool>("IsPresent")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int?>("MaxOrderSize")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Symbol")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("MappingsAssetId");

                                    b2.ToTable("Assets");

                                    b2.WithOwner()
                                        .HasForeignKey("MappingsAssetId");

                                    b2.OwnsOne("MarketPriceAPI.Models.TradingHours", "TradingHours", b3 =>
                                        {
                                            b3.Property<Guid>("MappingDetailsMappingsAssetId")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("ElectronicEnd")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("ElectronicStart")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("RegularEnd")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("RegularStart")
                                                .HasColumnType("TEXT");

                                            b3.HasKey("MappingDetailsMappingsAssetId");

                                            b3.ToTable("Assets");

                                            b3.WithOwner()
                                                .HasForeignKey("MappingDetailsMappingsAssetId");
                                        });

                                    b2.Navigation("TradingHours")
                                        .IsRequired();
                                });

                            b1.Navigation("Oanda");

                            b1.Navigation("Simulation");
                        });

                    b.OwnsOne("MarketPriceAPI.Models.Profile", "Profile", b1 =>
                        {
                            b1.Property<Guid>("AssetId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });

                    b.Navigation("Mappings")
                        .IsRequired();

                    b.Navigation("Profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
